<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>org.jetbrains.research.testgenie</id>
    <name>TestSpark</name>
    <vendor>ictl</vendor>


    <description><![CDATA[
    <p>TestSpark is a plugin for generating unit tests. TestSpark natively integrates different AI-based test generation tools and techniques in the IDE. </p>

    <p> TestSpark currently supports two test generation strategies:</p>
    <ul>
        <li>LLM-based test generation (using <a href="https://openai.com">OpenAI</a> and JetBrains internal AI Assistant platform)</li>
        <li>Local search-based test generation (using <a href="https://www.evosuite.org">EvoSuite</a>)</li>
    </ul>

    <h4>LLM-based test generation</h4>
    <p>For this type of test generation, TestSpark sends request to different Large Language Models. Also, it automatically checks if tests are valid before presenting it to users.</p>
    <p>This feature needs a token from OpenAI platform or the AI Assistant platform.</p>
    <ul>
        <li>Supports Java (any version).</li>
        <li>Generates unit tests for capturing failures.</li>
        <li>Generate tests for Java classes, methods, and single lines.</li>
    </ul>

    <h4>Local search-based test generation</h4>
    <p>For this type of test generation, TestSpark uses <a href="https://www.evosuite.org">EvoSuite</a>, which is the  most powerful search-based local test generator. </p>
    <ul>
        <li>Supports up to Java 11.</li>
        <li>Generates tests for different test criteria: line coverage, branch coverage, I/O diversity, exception coverage, mutation score.</li>
        <li>Generates unit tests for capturing failures.</li>
        <li>Generate tests for Java classes, methods, and single lines.</li>
    </ul>

    <p>Initially implemented by <a href="https://www.ciselab.nl">CISELab</a> at <a href="https://se.ewi.tudelft.nl">SERG @ TU Delft</a>, TestSpark is currently developed and maintained by <a href="https://lp.jetbrains.com/research/ictl/">ICTL at JetBrains Research</a>.</p>
      ]]></description>

    <change-notes><![CDATA[
        <h4>0.1.6</h4>
            <ul>
                <li>New UI for requesting a test generation process</li>
                <li>Users can now modify the prompt for each LLM-based request in the settings of the plugin</li>
                <li>Added the usage guide window</li>
                <li>Fixed some minor bugs</li>
                <li>Add support build 233.*</li>
            </ul>
        <h4>0.1.5</h4>
            <ul>
                <li>Fix some minor bugs in LLM-based test generation process</li>
            </ul>
        <h4>0.1.4</h4>
            <ul>
                <li>New UI for test generation report</li>
                <li>Add code highlighting and auto-completion for generated tests</li>
                <li>Add Java code formatter for generated tests</li>
                <li>Add direct user feedback to modify each generated test by LLM</li>
                <li>Improve the test case execution process</li>
                <li>Improve prompt generation</li>
            </ul>
        <h4>0.1.3</h4>
            <ul>
                <li>Add LLM-based test generation using Grazie platform in the settings</li>
                <li>Fix compilation issue in LLM-based test generation</li>
                <li>Fix Evosuite test generation freezing in case that a wrong java path is provided</li>
            </ul>

        <h4>0.1.2</h4>
            <ul>
                <li>Add LLM-based test generation using OpenAI platform</li>
                <li>Add visualizing the result of tests executions</li>
                <li>Improving user interaction with test cases</li>
                <li>Changing the plugin's name</li>
                <li>Fix bugs</li>
            </ul>

        <h4>0.1.1</h4>
            <ul>
                <li>Add LLM-based test generation for lines and methods</li>
                <li>Add support for mocking-related annotations in generated tests</li>
                <li>Smarter prompt generation to make sure that its number of tokens does not exceed the limits</li>
                <li>Improve test parsing</li>
                <li>Fix some major performance and functional bugs in interaction with Jacoco</li>
                <li>code refactoring</li>
            </ul>

        <h4>0.1.0</h4>
            <ul>
                <li>Add LLM-based test generation using LLM platform</li>
                <li>Add test execution and coverage information collector for tests generated by LLM</li>
                <li>Add a feedback cycle between test compilation and LLM to ensure tests generated by LLM can be compiled</li>
                <li>Better error handling</li>
            </ul>

        <h4>0.0.3</h4>
            <ul>
                <li>Fix some bugs</li>
            </ul>

        <h4>0.0.2</h4>
            <ul>
                <li>Improved test generation by aborting incomplete project builds and ensuring successful project builds before test generation begins</li>
                <li>Catching Evosuite errors related to unknown classes by checking for incorrect input of .class files</li>
                <li>Automatic creation of test files with the automatic addition includes and package lines</li>
                <li>Error checking for target class initialization</li>
                <li>Compatibility with IDEA 231.*</li>
                <li>Add automated project build</li>
                <li>Add compiled classes detector</li>
            </ul>
    ]]>
    </change-notes>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="TestSpark" secondary="true" anchor="right" icon="org.jetbrains.research.testspark.display.TestSparkIcons.toolWindowIcon"
                    factoryClass="org.jetbrains.research.testspark.toolwindow.TestSparkToolWindowFactory"/>

        <!-- Application-level services -->
        <applicationService
                serviceImplementation="org.jetbrains.research.testspark.services.SettingsApplicationService"/>
        <applicationService
                serviceImplementation="org.jetbrains.research.testspark.services.SettingsProjectService"/>

        <!-- Configurables -->
        <projectConfigurable
                parentId="tools"
                instance="org.jetbrains.research.testspark.settings.SettingsPluginConfigurable"
                id="TestSparkSettings"
                displayName="TestSpark"/>
        <applicationConfigurable
                parentId="TestSparkSettings"
                instance="org.jetbrains.research.testspark.settings.llm.SettingsLLMConfigurable"
                id="TestSparkSettings.llm"
                displayName="Large Language Models"/>
        <applicationConfigurable
                parentId="TestSparkSettings"
                instance="org.jetbrains.research.testspark.settings.evosuite.SettingsEvoSuiteConfigurable"
                id="TestSparkSettings.evosuite"
                displayName="EvoSuite"/>

        <!-- Notifications -->
        <notificationGroup id="Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="EvoSuite Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Test Validation Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Build Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Validation Result"
                           displayType="BALLOON"/>
        <notificationGroup id="LLM Execution Error"
                           displayType="BALLOON"/>

        <statistics.counterUsagesCollector implementationClass="org.jetbrains.research.testspark.collectors.FeedbackSentCollector"/>
        <statistics.counterUsagesCollector implementationClass="org.jetbrains.research.testspark.collectors.LikedDislikedCollector"/>
        <statistics.counterUsagesCollector implementationClass="org.jetbrains.research.testspark.collectors.CoverageStatusShowedCollector"/>
        <statistics.counterUsagesCollector implementationClass="org.jetbrains.research.testspark.collectors.TestGenerationStartedCollector"/>
        <statistics.counterUsagesCollector implementationClass="org.jetbrains.research.testspark.collectors.TestGenerationFinishedCollector"/>
        <statistics.counterUsagesCollector implementationClass="org.jetbrains.research.testspark.collectors.GeneratedTestsCollector"/>
        <statistics.counterUsagesCollector implementationClass="org.jetbrains.research.testspark.collectors.IntegratedTestsCollector"/>

    </extensions>

    <projectListeners>
        <listener
                class="org.jetbrains.research.testspark.listener.TestGenerationResultListenerImpl"
                topic="org.jetbrains.research.testspark.tools.TestGenerationResultListener"/>
        <listener
                class="org.jetbrains.research.testspark.listener.TelemetrySubmitListenerImpl"
                topic="com.intellij.openapi.startup.ProjectActivity"/>
        <listener
                class="org.jetbrains.research.testspark.listener.ProjectCloseListenerImpl"
                topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </projectListeners>

    <actions>
        <!-- TestSpark actions -->
        <action id="TestSpark.TestSparkActions" text="TestSpark" description="Actions related to TestSpark"
               class="org.jetbrains.research.testspark.actions.TestSparkAction">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>

        </action>
    </actions>
</idea-plugin>
