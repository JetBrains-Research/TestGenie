<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>org.jetbrains.research.testgenie</id>
    <name>TestSpark</name>
    <vendor>ictl</vendor>


    <description><![CDATA[
    <p>TestSpark is a plugin for generating unit tests. TestSpark natively integrates different AI-based test generation tools and techniques in the IDE. </p>

    <p> TestSpark currently supports two test generation strategies:</p>
    <ul>
        <li>LLM-based test generation (using LLM platform)</li>
        <li>Local search-based test generation (using <a href="https://www.evosuite.org">EvoSuite</a>)</li>
    </ul>

    <h4>LLM-based test generation</h4>
    <p>For this type of test generation, TestSpark uses LLM platform APIs to send request to different Large Language Models. Currently, we use GPT-4.</p>
    <p>This feature needs a LLM platform token, which means that at this point it can be used by JetBrains employees. We are working on making it available for all users in the near future.</p>
    <ul>
        <li>Supports Java (any version).</li>
        <li>Generates unit tests for capturing failures.</li>
        <li>Generate tests for Java classes, methods, and single lines.</li>
    </ul>

    <h4>Local search-based test generation</h4>
    <p>For this type of test generation, TestSpark uses <a href="https://www.evosuite.org">EvoSuite</a>, which is the  most powerful search-based local test generator. </p>
    <ul>
        <li>Supports up to Java 11.</li>
        <li>Generates tests for different test criteria: line coverage, branch coverage, I/O diversity, exception coverage, mutation score.</li>
        <li>Generates unit tests for capturing failures.</li>
        <li>Generate tests for Java classes, methods, and single lines.</li>
    </ul>

    <p>Initially implemented by <a href="https://www.ciselab.nl">CISELab</a> at <a href="https://se.ewi.tudelft.nl">SERG @ TU Delft</a>, TestSpark is currently developed and maintained by <a href="https://lp.jetbrains.com/research/ictl/">ICTL at JetBrains Research</a>.</p>
      ]]></description>

    <change-notes><![CDATA[
        <h4>0.1.3</h4>
            <ul>
                <li>Add LLM-based test generation using Grazie platform in the settings</li>
                <li>Fix compilation issue in LLM-based test generation</li>
                <li>Fix Evosuite test generation freezing in case that a wrong java path is provided</li>
            </ul>

        <h4>0.1.2</h4>
            <ul>
                <li>Add LLM-based test generation using OpenAI platform</li>
                <li>Add visualizing the result of tests executions</li>
                <li>Improving user interaction with test cases</li>
                <li>Changing the plugin's name</li>
                <li>Fix bugs</li>
            </ul>

        <h4>0.1.1</h4>
            <ul>
                <li>Add LLM-based test generation for lines and methods</li>
                <li>Add support for mocking-related annotations in generated tests</li>
                <li>Smarter prompt generation to make sure that its number of tokens does not exceed the limits</li>
                <li>Improve test parsing</li>
                <li>Fix some major performance and functional bugs in interaction with Jacoco</li>
                <li>code refactoring</li>
            </ul>

        <h4>0.1.0</h4>
            <ul>
                <li>Add LLM-based test generation using LLM platform</li>
                <li>Add test execution and coverage information collector for tests generated by LLM</li>
                <li>Add a feedback cycle between test compilation and LLM to ensure tests generated by LLM can be compiled</li>
                <li>Better error handling</li>
            </ul>

        <h4>0.0.3</h4>
            <ul>
                <li>Fix some bugs</li>
            </ul>

        <h4>0.0.2</h4>
            <ul>
                <li>Improved test generation by aborting incomplete project builds and ensuring successful project builds before test generation begins</li>
                <li>Catching Evosuite errors related to unknown classes by checking for incorrect input of .class files</li>
                <li>Automatic creation of test files with the automatic addition includes and package lines</li>
                <li>Error checking for target class initialization</li>
                <li>Compatibility with IDEA 231.*</li>
                <li>Add automated project build</li>
                <li>Add compiled classes detector</li>
            </ul>
    ]]>
    </change-notes>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">

        <!-- Project-level services -->
        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.SettingsProjectService"/>
        <projectService serviceImplementation="org.jetbrains.research.testspark.services.TestCaseDisplayService"/>

        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.CoverageVisualisationService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.CoverageToolWindowDisplayService"/>
        <projectService serviceImplementation="org.jetbrains.research.testspark.editor.Workspace"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.TestCaseCachingService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.StaticInvalidationService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.TestSparkTelemetryService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.RunnerService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.ErrorService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.TestsExecutionResultService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.TestCoverageCollectorService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.JavaClassBuilderService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testspark.services.RunCommandLineService"/>

        <toolWindow id="TestSpark" secondary="true" anchor="right"
                    factoryClass="org.jetbrains.research.testspark.toolwindow.TestSparkToolWindowFactory"/>

<!--        TODO uncomment after the validator fixing-->
<!--        <toolWindow id="TestSpark Validator" secondary="true" anchor="bottom"-->
<!--                    factoryClass="org.jetbrains.research.testspark.tools.evosuite.validation.ValidationToolWindowFactory"/>-->

        <!-- Application-level services -->
        <applicationService
                serviceImplementation="org.jetbrains.research.testspark.services.SettingsApplicationService"/>
        <applicationService
                serviceImplementation="org.jetbrains.research.testspark.services.QuickAccessParametersService"/>

        <!-- Configurables -->
        <projectConfigurable
                parentId="tools"
                instance="org.jetbrains.research.testspark.settings.SettingsPluginConfigurable"
                id="TestSparkSettings"
                displayName="TestSpark"/>
        <applicationConfigurable
                parentId="TestSparkSettings"
                instance="org.jetbrains.research.testspark.settings.SettingsEvoSuiteConfigurable"
                id="TestSparkSettings.evosuite"
                displayName="EvoSuite"/>
        <applicationConfigurable
                parentId="TestSparkSettings"
                instance="org.jetbrains.research.testspark.settings.SettingsLLMConfigurable"
                id="TestSparkSettings.llm"
                displayName="Large Language Models"/>

        <!-- Notifications -->
        <notificationGroup id="Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="EvoSuite Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Test Validation Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Build Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Validation Result"
                           displayType="BALLOON"/>
        <notificationGroup id="LLM Execution Error"
                           displayType="BALLOON"/>

    </extensions>

    <projectListeners>
        <listener
                class="org.jetbrains.research.testspark.listener.TestGenerationResultListenerImpl"
                topic="org.jetbrains.research.testspark.tools.TestGenerationResultListener"/>
        <listener
                class="org.jetbrains.research.testspark.listener.TelemetrySubmitListenerImpl"
                topic="com.intellij.openapi.startup.ProjectActivity"/>
        <listener
                class="org.jetbrains.research.testspark.listener.ProjectCloseListenerImpl"
                topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </projectListeners>

    <actions>
        <!-- TestSpark actions -->
        <group id="TestSpark.TestSparkActions" text="TestSpark" description="Actions related to TestSpark" popup="true"
               class="com.intellij.openapi.actionSystem.DefaultActionGroup">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <!-- Generate tests for class -->
<!--            <action class="org.jetbrains.research.testspark.actions.common.GenerateTestsActionClassCommon"-->
<!--                    id="TestSpark.TestSparkActions.GenerateTestsForClass"-->
<!--                    text="Generate Tests For Class"-->
<!--                    description="Generate tests for the selected class using TestSpark">-->
<!--                <keyboard-shortcut first-keystroke="control alt shift G" second-keystroke="C" keymap="$default"/>-->
<!--            </action>-->
<!--            &lt;!&ndash; Generate tests for method &ndash;&gt;-->
<!--            <action class="org.jetbrains.research.testspark.actions.common.GenerateTestsActionMethodCommon"-->
<!--                    id="TestSpark.TestSparkActions.GenerateTestsForMethod"-->
<!--                    text="Generate Tests For Method"-->
<!--                    description="Generate tests for the selected method using TestSpark">-->
<!--                <keyboard-shortcut first-keystroke="control alt shift G" second-keystroke="M" keymap="$default"/>-->
<!--            </action>-->
<!--            &lt;!&ndash; Generate tests for lines &ndash;&gt;-->
<!--            <action class="org.jetbrains.research.testspark.actions.common.GenerateTestsActionLineCommon"-->
<!--                    id="TestSpark.TestSparkActions.GenerateTestsForLine"-->
<!--                    text="Generate Tests For Line"-->
<!--                    description="Generate tests for the selected line using TestSpark">-->
<!--                <keyboard-shortcut first-keystroke="control alt shift G" second-keystroke="L" keymap="$default"/>-->
<!--            </action>-->
            <!-- Generate tests for class using LLM-->
            <action class="org.jetbrains.research.testspark.actions.llm.GenerateTestsActionClassLlm"
                    id="TestSpark.TestSparkActions.GenerateTestsForClassLlm"
                    text="Generate Tests For Class (LLM)"
                    description="Generate tests for the selected class using TestSpark (LLM version)">
            </action>
            <!-- Generate tests for class using EvoSuite-->
            <action class="org.jetbrains.research.testspark.actions.evosuite.GenerateTestsActionClassEvosuite"
                    id="TestSpark.TestSparkActions.GenerateTestsForClassEvosuite"
                    text="Generate Tests For Class (EvoSuite)"
                    description="Generate tests for the selected class using TestSpark (EvoSuite version)">
            </action>
            <!-- Generate tests for method using LLM-->
            <action class="org.jetbrains.research.testspark.actions.llm.GenerateTestsActionMethodLlm"
                    id="TestSpark.TestSparkActions.GenerateTestsForMethodLlm"
                    text="Generate Tests For Method (LLM)"
                    description="Generate tests for the selected method using TestSpark (LLM version)">
            </action>
            <!-- Generate tests for method using EvoSuite-->
            <action class="org.jetbrains.research.testspark.actions.evosuite.GenerateTestsActionMethodEvosuite"
                    id="TestSpark.TestSparkActions.GenerateTestsForMethodEvosuite"
                    text="Generate Tests For Method (EvoSuite)"
                    description="Generate tests for the selected method using TestSpark (EvoSuite version)">
            </action>
            <!-- Generate tests for line using LLM-->
            <action class="org.jetbrains.research.testspark.actions.llm.GenerateTestsActionLineLlm"
                    id="TestSpark.TestSparkActions.GenerateTestsForLineLLM"
                    text="Generate Tests For Line (LLM)"
                    description="Generate tests for the selected line using TestSpark (LLM version)">
            </action>
            <!-- Generate tests for line using EvoSuite-->
            <action class="org.jetbrains.research.testspark.actions.evosuite.GenerateTestsActionLineEvosuite"
                    id="TestSpark.TestSparkActions.GenerateTestsForLineEvosuite"
                    text="Generate Tests For Line (EvoSuite)"
                    description="Generate tests for the selected line using TestSpark (EvoSuite version)">
            </action>
        </group>
    </actions>
</idea-plugin>
